function EmojiSelector({ 
  mostrarSelectorEmojis, 
  setMostrarSelectorEmojis, 
  categoriaEmojiSeleccionada, 
  setCategoriaEmojiSeleccionada,
  onSeleccionarEmoji 
}) {
  const emojisDisponibles = {
    objetos: [
      "üì¶", "üìö", "üé∏", "üîë", "‚öóÔ∏è", "üíª", "üì±", "üìä", "üìã", "üîß",
      "‚öôÔ∏è", "üî©", "üß∞", "üõ†Ô∏è", "üî®", "‚õèÔ∏è", "ü™ì", "ü™ö", "üîó", "‚õìÔ∏è",
      "üìè", "üìê", "‚úÇÔ∏è", "üìå", "üìç", "üñáÔ∏è", "üìé", "üñäÔ∏è", "‚úèÔ∏è", "üìù",
      "üìÑ", "üìÉ", "üìë", "üìú", "üì∞", "üìì", "üìî", "üìï", "üìó", "üìò",
      "üìô", "üìí", "üìö", "üìñ", "üîñ", "üí≥", "üí∞", "üíé", "‚öñÔ∏è", "üè∫"
    ],
    tecnologia: [
      "üíª", "üñ•Ô∏è", "üñ®Ô∏è", "‚å®Ô∏è", "üñ±Ô∏è", "üñ≤Ô∏è", "üíΩ", "üíæ", "üíø", "üìÄ",
      "üì±", "‚òéÔ∏è", "üìû", "üìü", "üì†", "üì∫", "üìª", "üéôÔ∏è", "üéöÔ∏è", "üéõÔ∏è",
      "‚è∞", "‚è±Ô∏è", "‚è≤Ô∏è", "‚è≥", "‚åõ", "üì°", "üîã", "üîå", "üí°", "üî¶",
      "üïØÔ∏è", "üì∑", "üì∏", "üìπ", "üìº", "üîç", "üîé", "üî¨", "üî≠", "üì∞"
    ],
    hogar: [
      "üè†", "üè°", "üèòÔ∏è", "üè¢", "üè¨", "üè≠", "üè™", "üè´", "üè®", "üè¶",
      "üõèÔ∏è", "üõãÔ∏è", "üö™", "ü™ü", "üöø", "üõÅ", "üöΩ", "üßª", "üß∏", "üñºÔ∏è",
      "üï∞Ô∏è", "üßπ", "üßΩ", "üß¥", "üßº", "ü™£", "üß∫", "üóëÔ∏è", "üõí", "üõçÔ∏è",
      "üîë", "üóùÔ∏è", "üîí", "üîì", "üîê", "üõéÔ∏è", "üîî", "üîï", "üìØ", "üì¢"
    ],
    transporte: [
      "üöó", "üöï", "üöô", "üöå", "üöé", "üèéÔ∏è", "üöì", "üöë", "üöí", "üöê",
      "üöö", "üöõ", "üöú", "üõ¥", "üö≤", "üõµ", "üèçÔ∏è", "üõ∫", "üö®", "üö•",
      "üö¶", "üõë", "üöß", "‚öì", "‚õµ", "üõ∂", "üö§", "üõ≥Ô∏è", "‚õ¥Ô∏è", "üö¢",
      "‚úàÔ∏è", "üõ©Ô∏è", "üõ´", "üõ¨", "ü™Ç", "üí∫", "üöÅ", "üöü", "üö†", "üö°"
    ],
    comida: [
      "üçé", "üçä", "üçã", "üçå", "üçâ", "üçá", "üçì", "üçà", "üçí", "üçë",
      "ü•≠", "üçç", "ü••", "ü•ù", "üçÖ", "üçÜ", "ü•ë", "ü•¶", "ü•¨", "ü•í",
      "üå∂Ô∏è", "üåΩ", "ü•ï", "üßÑ", "üßÖ", "ü•î", "üç†", "ü•ê", "üçû", "ü•ñ",
      "ü•®", "üßÄ", "ü•ö", "üç≥", "üßà", "ü•û", "üßá", "ü•ì", "ü•©", "üçó",
      "üçñ", "üç§", "üç£", "üç±", "üçú", "üç≤", "üçõ", "üçù", "üçï", "üå≠"
    ],
    deportes: [
      "‚öΩ", "üèÄ", "üèà", "‚öæ", "ü•é", "üéæ", "üèê", "üèâ", "ü•è", "üé±",
      "ü™Ä", "üèì", "üè∏", "üèí", "üèë", "ü•ç", "üèè", "ü™É", "ü•Ö", "‚õ≥",
      "ü™Å", "üèπ", "üé£", "ü§ø", "ü•ä", "ü•ã", "üéΩ", "üõπ", "üõ∑", "‚õ∏Ô∏è",
      "ü•å", "üéø", "‚õ∑Ô∏è", "üèÇ", "ü™Ç", "üèãÔ∏è", "ü§∏", "ü§∫", "ü§æ", "üèá"
    ],
    musica: [
      "üéµ", "üé∂", "üéº", "üéπ", "ü•Å", "üé∑", "üé∫", "üé∏", "ü™ï", "üéª",
      "ü™ò", "üé§", "üéß", "üìª", "üéôÔ∏è", "üéöÔ∏è", "üéõÔ∏è", "üé™", "üé≠", "üé®",
      "üñåÔ∏è", "üñçÔ∏è", "üé¨", "üéûÔ∏è", "üìΩÔ∏è", "üéÆ", "üïπÔ∏è", "üé≤", "üß©", "‚ô†Ô∏è"
    ],
    trabajo: [
      "üíº", "üíª", "üìä", "üìà", "üìâ", "üí∞", "üíµ", "üí¥", "üí∂", "üí∑",
      "üí≥", "üßæ", "üíé", "‚öñÔ∏è", "üîß", "üî®", "‚õèÔ∏è", "üõ†Ô∏è", "‚öôÔ∏è", "üî©",
      "‚öóÔ∏è", "üß™", "üß´", "üß¨", "üî¨", "üî≠", "üì°", "üíâ", "ü©π", "ü©∫",
      "üè•", "üéì", "üè≠", "üè™", "üè¨", "üè¶", "üèõÔ∏è", "‚õ™", "üèüÔ∏è", "üèóÔ∏è"
    ],
    naturaleza: [
      "üå±", "üåø", "‚òòÔ∏è", "üçÄ", "üéç", "üéã", "üçÉ", "üçÇ", "üçÅ", "üçÑ",
      "üåæ", "üíê", "üå∑", "üåπ", "ü•Ä", "üå∫", "üå∏", "üåº", "üåª", "üåû",
      "üåù", "üåõ", "üåú", "üåö", "üåï", "üåñ", "üåó", "üåò", "üåë", "üåí",
      "üåì", "üåî", "üåô", "üåé", "üåç", "üåè", "ü™ê", "‚≠ê", "üåü", "‚ú®",
      "‚ö°", "‚òÑÔ∏è", "üí•", "üî•", "üå™Ô∏è", "üåà", "‚òÄÔ∏è", "üå§Ô∏è", "‚õÖ", "üå¶Ô∏è"
    ],
    simbolos: [
      "‚ù§Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "üñ§", "ü§ç", "ü§é", "üíî",
      "‚ù£Ô∏è", "üíï", "üíû", "üíì", "üíó", "üíñ", "üíò", "üíù", "üíü", "‚òÆÔ∏è",
      "‚úùÔ∏è", "‚ò™Ô∏è", "üïâÔ∏è", "‚ò∏Ô∏è", "‚ú°Ô∏è", "üîØ", "‚ò¶Ô∏è", "‚òØÔ∏è", "‚ò¶Ô∏è", "üõê",
      "‚õé", "‚ôà", "‚ôâ", "‚ôä", "‚ôã", "‚ôå", "‚ôç", "‚ôé", "‚ôè", "‚ôê",
      "‚ôë", "‚ôí", "‚ôì", "üÜî", "‚öõÔ∏è", "üâë", "‚ò¢Ô∏è", "‚ò£Ô∏è", "üì¥", "üì≥"
    ]
  };

  const seleccionarEmoji = (emoji) => {
    onSeleccionarEmoji(emoji);
    setMostrarSelectorEmojis(false);
  };

  if (!mostrarSelectorEmojis) return null;

  return (
    <div className="form-overlay">
      <div className="form-modal" style={{ maxWidth: '600px', maxHeight: '80vh', overflow: 'hidden' }}>
        <div className="form-header">
          <h3>
            <i className="bi bi-emoji-smile" style={{ marginRight: '10px' }}></i>
            Selector de Emojis
          </h3>
          <button 
            onClick={() => setMostrarSelectorEmojis(false)}
            className="btn-close"
          >
            <i className="bi bi-x"></i>
          </button>
        </div>
        
        {/* Pesta√±as de categor√≠as */}
        <div style={{ 
          display: 'flex', 
          flexWrap: 'wrap',
          gap: '5px',
          padding: '15px 20px 10px',
          borderBottom: '1px solid #e9ecef',
          backgroundColor: '#f8f9fa'
        }}>
          {Object.keys(emojisDisponibles).map(categoria => (
            <button
              key={categoria}
              onClick={() => setCategoriaEmojiSeleccionada(categoria)}
              style={{
                padding: '6px 12px',
                border: 'none',
                borderRadius: '6px',
                fontSize: '12px',
                fontWeight: '600',
                cursor: 'pointer',
                textTransform: 'capitalize',
                transition: 'all 0.3s ease',
                background: categoriaEmojiSeleccionada === categoria 
                  ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' 
                  : '#e9ecef',
                color: categoriaEmojiSeleccionada === categoria ? 'white' : '#666'
              }}
            >
              {categoria}
            </button>
          ))}
        </div>
        
        {/* Grid de emojis */}
        <div style={{ 
          padding: '20px',
          maxHeight: '400px',
          overflowY: 'auto'
        }}>
          <div style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fill, minmax(45px, 1fr))',
            gap: '8px'
          }}>
            {emojisDisponibles[categoriaEmojiSeleccionada].map((emoji, index) => (
              <button
                key={index}
                onClick={() => seleccionarEmoji(emoji)}
                style={{
                  width: '45px',
                  height: '45px',
                  border: '2px solid #e9ecef',
                  borderRadius: '8px',
                  background: 'white',
                  fontSize: '24px',
                  cursor: 'pointer',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  transition: 'all 0.2s ease'
                }}
                title={`Seleccionar ${emoji}`}
                onMouseEnter={(e) => {
                  e.target.style.borderColor = '#667eea';
                  e.target.style.transform = 'scale(1.1)';
                  e.target.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.target.style.borderColor = '#e9ecef';
                  e.target.style.transform = 'scale(1)';
                  e.target.style.boxShadow = 'none';
                }}
              >
                {emoji}
              </button>
            ))}
          </div>
        </div>
        
        {/* Informaci√≥n adicional */}
        <div style={{ 
          padding: '15px 20px', 
          background: '#f8f9fa',
          borderTop: '1px solid #e9ecef',
          textAlign: 'center'
        }}>
          <p style={{ margin: 0, fontSize: '14px', color: '#666' }}>
            üí° Haz clic en cualquier emoji para seleccionarlo
          </p>
        </div>
      </div>
    </div>
  );
}

export default EmojiSelector;
